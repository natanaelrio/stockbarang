generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model gedung {
  id     Int            @id @default(1)
  start  DateTime       @default(now())
  end    DateTime?      @updatedAt
  nama   String
  alamat String
  produk produkGedung[]
}

model product {
  id             String           @id @default(uuid())
  start          DateTime         @default(now())
  end            DateTime?        @updatedAt
  name_barang    String?
  harga          Int
  produkGedung   produkGedung[]
  pendingProduct pendingProduct[] @relation("PendingProduct")
}

model produkGedung {
  id       String    @id @default(uuid())
  start    DateTime  @default(now())
  end      DateTime? @updatedAt
  produkId String
  gedungId Int
  stok     Int

  produk product @relation(fields: [produkId], references: [id])
  gedung gedung  @relation(fields: [gedungId], references: [id])

  @@unique([produkId, gedungId]) // Setiap produk hanya boleh ada satu stok per gedung
}

model pendingProduct {
  id            String    @id @default(uuid())
  start         DateTime  @default(now())
  end           DateTime? @updatedAt
  stock_barang  Int?
  user          String?
  username      String?
  role          String?
  note          String?
  jenisBarang   String?
  statusProduct Boolean   @default(false)
  products      product[] @relation("PendingProduct")
  produkId      String?
}

model notifUser {
  id           String    @id @default(uuid())
  start        DateTime  @default(now())
  end          DateTime? @updatedAt
  username     String?
  namaBarang   String?
  jumlahBarang Int?
  note         String?
}

model logUser {
  id           String    @id @default(uuid())
  start        DateTime  @default(now())
  end          DateTime? @updatedAt
  userActivity String?
  activity     String?
}
